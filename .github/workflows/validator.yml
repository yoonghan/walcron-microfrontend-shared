name: Validate project codes

on:
  workflow_dispatch:
    inputs:
      deployed_url:
        description: Deployed url to approve
        type: string
        required: true
  workflow_call:
    inputs:
      deployed_url:
        description: Vercel deployed url, no http://
        type: string

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - name: 🛑 Cancel previous runs
        uses: styfle/cancel-workflow-action@0.11.0

      - name: ⬇️ Checkout repo
        uses: actions/checkout@v3

      - name: ⎔ Setup node
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node }}
          cache: "npm"

      - name: 📥 Download deps
        uses: bahmutov/npm-install@v1
        with:
          useLockFile: false

      # as requested by the React team :)
      # https://reactjs.org/blog/2019/10/22/react-release-channels.html#using-the-next-channel-for-integration-testing
      - name: ⚛️ Setup react
        run: npm install react@${{ matrix.react }} react-dom@${{ matrix.react }}

      - name: ✅ Validate lint, prettier and build
        run: npm run build

      - name: ✅ Validate test script
        run: npm run test:ci

      - name: 📁 Code coverage report
        uses: irongut/CodeCoverageSummary@v1.3.0
        with:
          filename: coverage/**/cobertura-coverage.xml
          badge: true
          format: "markdown"
          output: "both"

      - name: + Add Coverage PR Comment
        uses: marocchino/sticky-pull-request-comment@v2
        if: github.event_name == 'pull_request' && !startsWith(github.head_ref, 'dependabot/')
        with:
          recreate: true
          path: code-coverage-results.md

  e2e:
    runs-on: ubuntu-latest
    if: |
      !startsWith(github.head_ref , 'dependabot/')
    steps:
      - name: 🛑 Cancel previous runs
        uses: styfle/cancel-workflow-action@0.11.0

      - name: ⬇️ Checkout repo
        uses: actions/checkout@v3

      - name: ⎔ Setup node
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node }}
          cache: "npm"

      - name: 📥 Download deps
        uses: bahmutov/npm-install@v1

      - name: ✅ Verify Vercel deployment and update branch
        run: |
          URL=${{ inputs.deployed_url }}
          chmod a+x ./.github/scripts/deployment-check.sh && ./.github/scripts/deployment-check.sh https://${URL//\//\\/}
          sed -i "s/http:\/\/localhost:3000/https:\/\/${URL//\//\\/}/g" playwright.config.ts
          cat playwright.config.ts
        shell: bash

      - name: Override Backstop
        uses: ./.github/actions/backstop-override
        with:
          deployed_url: ${{ inputs.deployed_url }}

      - name: 📥 Install playwright browsers
        run: npx playwright install --with-deps

      - name: ▶️ Run page functional check
        run: CI=true && npm run playwright:test

      - name: ▶️ Run page rendering check
        shell: bash
        continue-on-error: true
        run: npm run backstop:test

      - name: ⬆️ Upload snapshot artifacts
        uses: actions/upload-artifact@v3
        with:
          name: backstop-artifact
          path: backstop_data/

      - name: ✅ Validate backstopjs snapshot is valid
        run: chmod a+x ./.github/scripts/snapshot-check.sh && ./.github/scripts/snapshot-check.sh
        shell: bash

  rust:
    runs-on: ubuntu-latest
    steps:
      - name: 🛑 Cancel previous runs
        uses: styfle/cancel-workflow-action@0.11.0

      - name: ⬇️ Checkout repo
        uses: actions/checkout@v3

      - uses: jetli/wasm-pack-action@v0.4.0
        with:
          version: "latest"

      - name: ⎔ Setup node
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node }}
          cache: "npm"

      - name: ⎔ Compile rust code
        run: cd crate && wasm-pack build --target web --out-dir pkg_compare
        shell: bash

      - name: ✅ Validate Wasm binary is latest with BEST effort
        run: chmod a+x ./.github/scripts/wasm-check.sh && ./.github/scripts/wasm-check.sh pkg_compare
        shell: bash

      - name: ✅ Validate wasm test
        run: npm run rust:generate && npm run rust:test
        shell: bash

      - name: Add rust wasm bindgen for code coverage run
        run: |
          echo "commented, core Rust needs to improved"
          # cd crate && cargo install wasm-bindgen-cli --vers "0.2.84"
        shell: bash

      - name: ✅ Validate for code coverage, work stopped here apparrently there are no solutions yet
        run: |
          echo "commented, core Rust needs to improved"
          #cd crate && cargo test --target wasm32-unknown-unknown
        shell: bash
